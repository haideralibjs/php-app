name: Install and Configure MySQL

on:
  push:
    branches:
      - main

jobs:
  install-mysql:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        
      - name: Nvm Installation And Switching To Github WorkSpace
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
          nvm install v23
          cd ${{ github.workspace }}
          ls -la

      - name: Set environment variables
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.MYSQL_USER }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_DEBUG: false
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=${{ env.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ env.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ env.DB_PASSWORD }}" >> .env

      - name: Php And Composer Installation
        run: |
         export TERM=xterm
         sudo /bin/bash -c "$(curl -fsSL https://php.new/install/linux/8.4)"
         source ~/.bashrc
         php -v
         composer global require laravel/installer
         composer --version
         
      - name: Laravel App Build
        run: |
          export PATH="/usr/local/bin:$PATH"
          /bin/bash composer install --no-dev --optimize-autoloader

      - name: Database Migrate
        run: |
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          

      
